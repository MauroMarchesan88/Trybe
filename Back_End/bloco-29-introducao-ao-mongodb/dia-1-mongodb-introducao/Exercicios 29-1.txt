show dbs
use exercicios
Utilizando a cole√ß√£o bios, construa queries para retornar os seguintes itens:
Exerc√≠cio 1: Retorne o documento com o _id igual a 8.
Exercicio 1: db.bios.find({"_id": 8}, {'_id', 'name'})

Exerc√≠cio 2: Retorne o documento com o _id igual a 8, mas s√≥ exiba os atributos: _id e name.
Exercicio 2: db.bios.find({"_id": 8}, {'name': 1})

üöÄ Exerc√≠cio 3: Retorne apenas os atributos name e birth do documento com o _id igual a 8.
Exercicio 3: db.bios.find({_id: 8}, {'name': 1, 'birth':1, _id:0})

Exerc√≠cio 4: Retorne todos os documentos em que o atributo name.first seja igual a John, utilizando o m√©todo pretty().
Exercicio 4: db.bios.find({'name.first' : 'John'}).pretty()

Exerc√≠cio 5: Retorne os 3 primeiros documentos da cole√ß√£o bios utilizando o m√©todo pretty().
Exercicio 5: db.bios.find().limit(3)

Exerc√≠cio 6: Retorne 2 documentos da cole√ß√£o bios pulando os 5 primeiros documentos.
Exercicio 6:db.bios.find().limit(2).skip(5)

Utilizando o mongoimport, importe o arquivo books.json para a sua inst√¢ncia local do MongoDB e utilize a cole√ß√£o books para construir as seguintes consultas:
üöÄ Exerc√≠cio 7: Retorne a quantidade de documentos da cole√ß√£o books.
Exercicio 7: db.books.countDocuments()

üöÄ Exerc√≠cio 8: Conte quantos livros existem com o status = "PUBLISH".
Exercicio 8: db.books.find({'status': 'PUBLISH'}).count()

üöÄ Exerc√≠cio 9: Exiba os atributos title, isbn e pageCount dos 3 primeiros livros. N√ÉO retorne o atributo _id.
Exercicio 9: db.books.find({},{'title':1, 'isbn':1, 'pageCount':1, _id:0}).limit(3)

Exerc√≠cio 10: Pule 5 documentos e exiba os atributos _id, title, authors e status dos livros com o status = "MEAP", limitando-se a 10 documentos.
Exercicio 10: db.books.find({'status': 'MEAP'}, {title:1, authors:1, status:1}).skip(5).limit(10)
